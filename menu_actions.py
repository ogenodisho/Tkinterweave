'''
This menu_actions.py module encapsulates all of the
responses to events generated by interacting with
tkinterweave's menu system.
'''

from Tkinter import *
import tkFileDialog
import utils
import colors
import global_configs
import dimensions

# Called when file > new is clicked
# Reset the img to one color
def do_new():
    # resize the canvas and the image to the default
    global_configs.CANVAS.config(width=dimensions.PI_WIDTH, height=dimensions.PI_HEIGHT)
    global_configs.IMG.config(width=dimensions.PI_WIDTH, height=dimensions.PI_HEIGHT)
    
    width = global_configs.IMG.width()
    height = global_configs.IMG.height()
    horizontal_line = "{" + " ".join([colors.BLACK]*width) + "}"
    global_configs.IMG.put(" ".join([horizontal_line]*height))
    
    # reset the zoom slider and factor
    global_configs.ZOOM_FACTOR = 1
    global_configs.ZOOMSLIDER.set(global_configs.ZOOM_FACTOR)

def do_open():
    global_configs.IMG = PhotoImage(file=tkFileDialog.askopenfilename(filetypes=[('GIF image', '*.gif')]))

    # set the size of the canvas to the size of the image - don't know why I have to minus 2...
    global_configs.CANVAS.config(width=global_configs.IMG.width() - 2, height=global_configs.IMG.height() - 2)

    # draw the new image on the canvas
    global_configs.CANVAS.create_image(0, 0,
                        anchor=NW,
                        image=global_configs.IMG,
                        state="normal")

    # reset the zoom slider and factor
    global_configs.ZOOM_FACTOR = 1
    global_configs.ZOOMSLIDER.set(global_configs.ZOOM_FACTOR)

def do_save():
    filename_to_save = tkFileDialog.asksaveasfilename(filetypes=[('GIF image', '*.gif')])
    if not filename_to_save.endswith(".gif"):
         filename_to_save += ".gif"
        
    global_configs.IMG.write(filename_to_save, format="gif")

def do_copy():
    print "COPY"

def do_paste():
    print "PASTE"

# window param - the window to draw the
# about window with respect to.
def do_about(window):
    geometry = utils.get_window_geometry(window)
    toplevel = Toplevel()
    toplevel.title("About Tkinterweave")
    toplevel.geometry("%dx%d+%d+%d" % (260, 150, geometry[2] + 30, geometry[3] + 80))
    label1 = Label(toplevel, text="Tkinterweave is a reflective paint tool developed for fun in Python!\n", wraplength=200, anchor=W, justify=CENTER)
    label1.pack()
    label2 = Label(toplevel, text="Brought to you by:\n\nOgen Odisho\n\nCopyright (c) 2015.", wraplength=200, anchor=W, justify=CENTER)
    label2.pack()
